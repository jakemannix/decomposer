<?xml version="1.0"?>

<project name="decomposer" basedir="." default="all">
  <property file="build.properties" />

  <property name="name" value="decomposer" />
  <property name="display.name" value="Decomposer" />
  <property name="author" value="Jake Mannix" />
  <property environment="env" />

  <path id="main-classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <pathelement path="${classes.dir}" />
  </path>
	
  <path id="contrib-lucene-classpath">
    <fileset dir="${dist.dir}">
      <include name="${name}-${curr.release}.jar" />
    </fileset>
    <fileset dir="${contrib.root.dir}/lucene">
      <include name="**/*.jar" />
    </fileset>
    <path refid="test-classpath" />
  </path>

  <path id="contrib-hadoop-classpath">
    <fileset dir="${dist.dir}">
      <include name="${name}-${curr.release}.jar" />
    </fileset>
    <fileset dir="${contrib.root.dir}/hadoop">
      <include name="**/*.jar" />
    </fileset>
    <path refid="test-classpath" />
  </path>

  <path id="test-classpath">
  	<!--
    <pathelement path="${env.VOLD_TEST_JARS}" />
    -->
    <path refid="main-classpath" />
    <pathelement path="${testclasses.dir}" />
  </path>

  <path id="contrib-lucene-test-classpath">
    <path refid="main-classpath" />
    <path refid="contrib-lucene-classpath" />
    <fileset dir="${dist.dir}">
      <include name="${name}-contrib-lucene-${curr.release}.jar" />
    </fileset>
  </path>

  <path id="contrib-hadoop-test-classpath">
    <path refid="main-classpath" />
    <path refid="contrib-hadoop-classpath" />
    <fileset dir="${dist.dir}">
      <include name="${name}-contrib-hadoop-${curr.release}.jar" />
    </fileset>
  </path>
	
  <macrodef name="replace-dir">
    <attribute name="dir" />
    <sequential>
      <delete dir="@{dir}" />
      <mkdir dir="@{dir}" />
    </sequential>
  </macrodef>

  <target name="all" depends="clean, jar, test, contrib-lucene-jar, contrib-hadoop-jar, srcjar" description="Build all artifacts." />

  <target name="clean" description="Delete generated files.">
    <delete dir="${dist.dir}" />
    <replace-dir dir="${javadoc.dir}" />
  </target>

  <target name="build" description="Compile main source tree java files">
    <replace-dir dir="${classes.dir}" />
    <!-- copy non-java files to classes dir to load from classpath -->
    <copy todir="${classes.dir}">
      <fileset dir="${java.dir}">
        <exclude name="**/*.java" />
        <exclude name="**/*.html" />
        <exclude name="**/log4j.properties" />
      </fileset>
    </copy>
    <!-- place to put log4j.properties -->
    <replace-dir dir="${resources.dir}"/>
    <copy file="${java.dir}/log4j.properties" todir="${resources.dir}"/>
    <javac destdir="${classes.dir}" target="1.5" debug="true" deprecation="true" failonerror="true">
      <src path="${java.dir}" />
      <classpath refid="main-classpath" />
    </javac>
  </target>

  <target name="buildtest" description="Compile test classes">
    <replace-dir dir="${testclasses.dir}" />
    <copy todir="${testclasses.dir}">
      <fileset dir="${commontestsrc.dir}">
        <exclude name="**/*.java" />
        <exclude name="**/*.html" />
      </fileset>
    </copy>
    <javac destdir="${testclasses.dir}" target="1.5" debug="true" deprecation="true" failonerror="true">
      <src path="${unittestsrc.dir}" />
      <src path="${commontestsrc.dir}" />
      <classpath refid="main-classpath" />
    </javac>
  </target>

  <target name="test" depends="build, buildtest" description="Build test jar file">
    <jar destfile="${dist.dir}/${name}-test-${curr.release}.jar">
      <fileset dir="${testclasses.dir}" />
    </jar>
  </target>

  <target name="jar" depends="build" description="Build jar file">
    <jar destfile="${dist.dir}/${name}-${curr.release}.jar">
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
      <fileset dir="${classes.dir}">
        <include name="**/*.*" />
      </fileset>
    </jar>
  </target>

  <target name="srcjar" description="Build source jar file">
    <mkdir dir="${dist.dir}" />
    <jar destfile="${dist.dir}/${name}-${curr.release}-src.jar">
      <fileset dir="${java.dir}">
        <include name="**/*.java" />
      </fileset>
    </jar>
  </target>
  
  <target name="alljar" depends="build, contrib-lucene-build, contrib-hadoop-build" description="Build a jar file that includes all contrib code.">
    <jar destfile="${dist.dir}/${name}-${curr.release}-all.jar">
      <fileset dir="${classes.dir}">
        <include name="**/*.*" />
      </fileset>
      <fileset dir="${contrib.classes.dir}">
        <include name="**/*.*" />
      </fileset>
      <!-- include xsds -->
      <fileset dir="${java.dir}">
        <include name="**/*.xsd" />
      </fileset>
    </jar>
  </target>
  
  <target name="contrib-lucene-build" depends="build, buildtest" description="Compile lucene contrib packages (java and test) ">
    <replace-dir dir="${contrib.classes.dir}/lucene" />
    <javac destdir="${contrib.classes.dir}/lucene" target="1.5" debug="true" deprecation="true" failonerror="true">
      <src path="${contrib.root.dir}/lucene" />
      <classpath refid="main-classpath" />
      <classpath refid="contrib-lucene-classpath" />
    </javac>
  </target>

  <target name="contrib-lucene-jar" depends="contrib-lucene-build" description="Build lucene contrib jar file">
    <jar destfile="${dist.dir}/${name}-contrib-lucene-${curr.release}.jar">
      <fileset dir="${contrib.classes.dir}/lucene">
        <include name="**/*.*" />
      </fileset>
    </jar>
  </target>

  <target name="contrib-hadoop-build" depends="build, buildtest" description="Compile hadoop contrib packages (java and test) ">
    <replace-dir dir="${contrib.classes.dir}/hadoop" />
    <javac destdir="${contrib.classes.dir}/hadoop" target="1.6" debug="true" deprecation="true" failonerror="true">
      <src path="${contrib.root.dir}/hadoop" />
      <classpath refid="main-classpath" />
      <classpath refid="contrib-hadoop-classpath" />
    </javac>
  </target>

  <target name="contrib-hadoop-jar" depends="jar, contrib-hadoop-build" description="Build hadoop contrib jar file">
    <copy todir="${contrib.root.dir}/hadoop/lib" file="${dist.dir}/${name}-${curr.release}.jar"/>
    <jar destfile="${dist.dir}/${name}-contrib-hadoop-${curr.release}.jar">
      <manifest>
        <attribute name="Main-Class" value="${contrib.hadoop.main.class}"/>
      </manifest>
    	<fileset dir="${contrib.root.dir}/hadoop">
    	  <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${contrib.classes.dir}/hadoop">
        <include name="**/*.*" />
      </fileset>
    </jar>
  </target>
	
  <target name="contrib-lucene-srcjar" description="Build lucene contrib source jar file">
    <mkdir dir="${dist.dir}" />
    <jar destfile="${dist.dir}/${name}-contrib-lucene-${curr.release}-src.jar">
      <fileset dir="${contrib.root.dir}/lucene/**/java">
        <include name="**/*.java" />
      </fileset>
    </jar>
  </target>

  <target name="contrib-hadoop-srcjar" description="Build hadoop contrib source jar file">
    <mkdir dir="${dist.dir}" />
    <jar destfile="${dist.dir}/${name}-contrib-hadoop-${curr.release}-src.jar">
      <fileset dir="${contrib.root.dir}/hadoop/**/java">
        <include name="**/*.java" />
      </fileset>
    </jar>
  </target>

  <target name="contrib-lucene-junit" depends="contrib-lucene-jar" description="Run lucene contrib junit tests.">
    <replace-dir dir="${contribtestreport.dir}/lucene" />
    <replace-dir dir="${contribtesthtml.dir}/lucene" />
    <junit printsummary="yes" maxmemory="1024m" showoutput="true" failureProperty="test.failure">
      <classpath refid="contrib-lucene-test-classpath" />
      <formatter type="xml" />
      <batchtest fork="yes" todir="${contribtestreport.dir}/lucene">
        <fileset dir="${contrib.classes.dir}/lucene">
          <include name="**/*Test.class" />
          <exclude name="**/*PerformanceTest.class" />
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${contribtesthtml.dir}/lucene">
      <fileset dir="${contribtestreport.dir}/lucene">
        <include name="TEST-*.xml" />
      </fileset>
      <report todir="${contribtesthtml.dir}/lucene" format="frames" />
    </junitreport>
  </target>

  <target name="contrib-hadoop-junit" depends="contrib-hadoop-jar" description="Run hadoop contrib junit tests.">
    <replace-dir dir="${contribtestreport.dir}/hadoop" />
    <replace-dir dir="${contribtesthtml.dir}/hadoop" />
    <junit printsummary="yes" maxmemory="1024m" showoutput="true" failureProperty="test.failure">
      <classpath refid="contrib-hadoop-test-classpath" />
      <formatter type="xml" />
      <batchtest fork="yes" todir="${contribtestreport.dir}/hadoop">
        <fileset dir="${contrib.classes.dir}/hadoop">
          <include name="**/*Test.class" />
          <exclude name="**/*PerformanceTest.class" />
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${contribtesthtml.dir}/hadoop">
      <fileset dir="${contribtestreport.dir}/hadoop">
        <include name="TEST-*.xml" />
      </fileset>
      <report todir="${contribtesthtml.dir}/hadoop" format="frames" />
    </junitreport>
  </target>
	
  <target name="release" depends="all" description="Create a release zip file with everything pre-built.">
    <zip destfile="${dist.dir}/${name}-${curr.release}.zip">
      <zipfileset dir="." prefix="decomposer-${curr.release}" filemode="755" includes="bin/*"/>
      <zipfileset dir="." prefix="decomposer-${curr.release}" includes="**">
        <exclude name="${dist.dir}/*classes"/>
        <exclude name="bin/*"/>
      </zipfileset>
    </zip>
    <tar destfile="${dist.dir}/${name}-${curr.release}.tar.gz" compression="gzip" longfile="gnu">
      <tarfileset dir="." prefix="decomposer-${curr.release}" filemode="755" includes="bin/*"/>
      <tarfileset dir="." prefix="decompser-${curr.release}" includes="**">
        <exclude name="${dist.dir}/*classes"/>
        <exclude name="${dist.dir}/*.zip"/>
        <exclude name="bin/*"/>
      </tarfileset>
    </tar>
  </target>
	
  <target name="junit" depends="build, buildtest" description="Run junit tests.">
    <replace-dir dir="${testreport.dir}" />
    <replace-dir dir="${testhtml.dir}" />
    <junit printsummary="yes" showoutput="true">
      <classpath refid="test-classpath" />
      <formatter type="xml" />
      <batchtest fork="yes" todir="${testreport.dir}">
        <fileset dir="${unittestsrc.dir}">
          <include name="**/*Test.java" />
          <exclude name="**/Abstract*.java" />
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${testhtml.dir}">
      <fileset dir="${testreport.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report todir="${testhtml.dir}" format="frames" />
    </junitreport>
  </target>

  <target name="junit-all" depends="junit, contrib-lucene-junit, contrib-hadoop-junit" description="Run All junit tests including contrib.">
  </target>

  <macrodef name="make-javadocs">
    <attribute name="dir" />
    <attribute name="packagenames" />
    <attribute name="javadir" />
    <sequential>
      <replace-dir dir="@{dir}" />
      <javadoc sourcepath="@{javadir}" destdir="@{dir}" windowtitle="${display.name}" source="1.5" author="true" version="true" use="true" packagenames="@{packagenames}">
        <doctitle>${display.name}</doctitle>
        <bottom>${author}</bottom>
        <classpath refid="main-classpath" />
      </javadoc>
    </sequential>
  </macrodef>

  <target name="docs" description="Create complete Javadoc documentation">
    <make-javadocs dir="${javadoc.dir}/all" packagenames="*" javadir="${java.dir}"/>
  </target>

</project>
