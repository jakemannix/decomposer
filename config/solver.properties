# Directory in which serialized vectors live, as if put there by DiskBufferedDoubleMatrix.persist()
solver.input.dir = contrib/hadoop/test/data/random_matrix/serialized_format/corpus

# Directory where you want the eigenvectors and eigenvalues to live
solver.output.dir = dist/random_matrix_eigens

# Minimum number of rows of the matrix to buffer in RAM while iterating over the input matrix.
# The higher this is, the higher you'll need to set your -Xmx settings, but the less cpu will be wasted 
# on pulling new chunks of the matrix into RAM all the time.
solver.input.bufferSize = 1000

# Number of desired eigenvectors to find.
solver.output.desiredRank = 10

# Stop solving if your purported eigenvector (e) satisfies 
# 1 - (corpus.timesSquared(e)).dot(e) / e.norm() * (corpus.timesSquared(e).norm()) < ${solver.convergence}
solver.convergence = 0.005

# Even if you haven't hit the above convergence limit, stop if you've checked for convergence this number
# of times.
solver.maxPasses = 5

# On a machine with more than 2 cores available, upping the number of threads to use for convergence 
# verification can speed up the calculation
solver.verifier.numThreads = 1
